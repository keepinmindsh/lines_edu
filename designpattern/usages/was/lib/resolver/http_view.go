package resolver

import (
	"design_patterns/domain"
	"fmt"
	"strconv"
)

type httpView struct {
}

func (h httpView) Resolve(param domain.ViewResolverConfig) {
	// Manually construct the HTTP response header
	header := "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nContent-Length: "
	htmlContent := `<!DOCTYPE html>
<html>
<head>
<title>HTML Response</title>
</head>
<body>
<p>This is an HTML response generated by Golang.</p>
</body>
</html>`
	htmlLength := len(htmlContent)
	header += strconv.Itoa(htmlLength) + "\r\n\r\n"

	// Write the response header
	_, err := param.Conn.Write([]byte(header))
	if err != nil {
		fmt.Println("Error writing response header:", err)
		return
	}

	// Write the HTML content
	_, err = param.Conn.Write([]byte(htmlContent))
	if err != nil {
		fmt.Println("Error writing HTML content:", err)
		return
	}
}

func NewHttpView() domain.ViewResolver {
	return &httpView{}
}
